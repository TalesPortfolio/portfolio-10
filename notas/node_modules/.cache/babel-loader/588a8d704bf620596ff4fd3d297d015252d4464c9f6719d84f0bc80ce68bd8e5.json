{"ast":null,"code":"var _jsxFileName = \"/home/tales/Documents/GITHUB/minhas-tarefas/src/containers/componets/FiltroCard/index.tsx\",\n  _s = $RefreshSig$();\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as S from './styles';\nimport { alterarFiltro } from '../../../store/reducers/filtro';\nimport tarefas from '../../../store/reducers/tarefas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FiltroCard = _ref => {\n  _s();\n  let {\n    contador,\n    legenda,\n    criterio,\n    valor\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    filtro\n  } = useSelector(state => state);\n  const verificaEstaAtivo = () => {\n    const mesmoCriterio = filtro.criterio === criterio;\n    const mesmoValor = filtro.valor === valor;\n    return mesmoCriterio && mesmoValor;\n  };\n  const contarTarefas = () => {\n    if (criterio === 'todas') return tarefas.itens.length;\n    if (criterio === 'prioridade') {\n      return tarefas.itens.filter();\n    }\n  };\n  const filtrar = () => {\n    dispatch(alterarFiltro({\n      criterio,\n      valor\n    }));\n  };\n  const ativo = verificaEstaAtivo();\n  return /*#__PURE__*/_jsxDEV(S.Card, {\n    ativo: ativo,\n    onClick: filtrar,\n    children: [/*#__PURE__*/_jsxDEV(S.Contador, {\n      children: contador\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n      children: legenda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(FiltroCard, \"ydboJmFZAJQu8enJemfkg/ONz0g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FiltroCard;\nexport default FiltroCard;\nvar _c;\n$RefreshReg$(_c, \"FiltroCard\");","map":{"version":3,"names":["useDispatch","useSelector","S","alterarFiltro","tarefas","jsxDEV","_jsxDEV","FiltroCard","_ref","_s","contador","legenda","criterio","valor","dispatch","filtro","state","verificaEstaAtivo","mesmoCriterio","mesmoValor","contarTarefas","itens","length","filter","filtrar","ativo","Card","onClick","children","Contador","fileName","_jsxFileName","lineNumber","columnNumber","Label","_c","$RefreshReg$"],"sources":["/home/tales/Documents/GITHUB/minhas-tarefas/src/containers/componets/FiltroCard/index.tsx"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux'\nimport * as S from './styles'\nimport { alterarFiltro } from '../../../store/reducers/filtro'\nimport * as enums from '../../utils/enums/Tarefa'\nimport { RootReducer } from '../../../store'\nimport tarefas from '../../../store/reducers/tarefas'\n\nexport type Props = {\n  contador: number\n  legenda: string\n  criterio: 'prioridade' | 'status' | 'todas'\n  valor?: enums.Prioridade | enums.Status\n}\n\nconst FiltroCard = ({ contador, legenda, criterio, valor }: Props) => {\n  const dispatch = useDispatch()\n  const { filtro } = useSelector((state: RootReducer) => state)\n\n  const verificaEstaAtivo = () => {\n    const mesmoCriterio = filtro.criterio === criterio\n    const mesmoValor = filtro.valor === valor\n\n    return mesmoCriterio && mesmoValor\n  }\n\n  const contarTarefas = () => {\n    if (criterio === 'todas') return tarefas.itens.length\n    if(criterio === 'prioridade'){\n      return tarefas.itens.filter()\n    }\n  }\n\n  const filtrar = () => {\n    dispatch(\n      alterarFiltro({\n        criterio,\n        valor\n      })\n    )\n  }\n\n  const ativo = verificaEstaAtivo()\n\n  return (\n    <S.Card ativo={ativo} onClick={filtrar}>\n      <S.Contador>{contador}</S.Contador>\n      <S.Label>{legenda}</S.Label>\n    </S.Card>\n  )\n}\n\nexport default FiltroCard\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,KAAKC,CAAC,MAAM,UAAU;AAC7B,SAASC,aAAa,QAAQ,gCAAgC;AAG9D,OAAOC,OAAO,MAAM,iCAAiC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AASrD,MAAMC,UAAU,GAAGC,IAAA,IAAmD;EAAAC,EAAA;EAAA,IAAlD;IAAEC,QAAQ;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAL,IAAA;EAC/D,MAAMM,QAAQ,GAAGd,WAAW,EAAE;EAC9B,MAAM;IAAEe;EAAO,CAAC,GAAGd,WAAW,CAAEe,KAAkB,IAAKA,KAAK,CAAC;EAE7D,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,aAAa,GAAGH,MAAM,CAACH,QAAQ,KAAKA,QAAQ;IAClD,MAAMO,UAAU,GAAGJ,MAAM,CAACF,KAAK,KAAKA,KAAK;IAEzC,OAAOK,aAAa,IAAIC,UAAU;EACpC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIR,QAAQ,KAAK,OAAO,EAAE,OAAOR,OAAO,CAACiB,KAAK,CAACC,MAAM;IACrD,IAAGV,QAAQ,KAAK,YAAY,EAAC;MAC3B,OAAOR,OAAO,CAACiB,KAAK,CAACE,MAAM,EAAE;IAC/B;EACF,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBV,QAAQ,CACNX,aAAa,CAAC;MACZS,QAAQ;MACRC;IACF,CAAC,CAAC,CACH;EACH,CAAC;EAED,MAAMY,KAAK,GAAGR,iBAAiB,EAAE;EAEjC,oBACEX,OAAA,CAACJ,CAAC,CAACwB,IAAI;IAACD,KAAK,EAAEA,KAAM;IAACE,OAAO,EAAEH,OAAQ;IAAAI,QAAA,gBACrCtB,OAAA,CAACJ,CAAC,CAAC2B,QAAQ;MAAAD,QAAA,EAAElB;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAc,eACnC3B,OAAA,CAACJ,CAAC,CAACgC,KAAK;MAAAN,QAAA,EAAEjB;IAAO;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEb,CAAC;AAAAxB,EAAA,CAnCKF,UAAU;EAAA,QACGP,WAAW,EACTC,WAAW;AAAA;AAAAkC,EAAA,GAF1B5B,UAAU;AAqChB,eAAeA,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}