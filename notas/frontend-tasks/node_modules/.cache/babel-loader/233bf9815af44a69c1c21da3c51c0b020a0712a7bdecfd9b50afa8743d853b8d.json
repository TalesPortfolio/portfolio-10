{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:4000'\n});\n\n// Interceptor para adicionar token automático\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    // Garante que headers existe\n    config.headers = config.headers || {};\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers"],"sources":["/home/tales/Documents/GITHUB-PORTFOLIO/portfolio-10/notas/frontend-tasks/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:4000',\n});\n\n// Interceptor para adicionar token automático\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n\n  if (token) {\n    // Garante que headers existe\n    config.headers = config.headers || {};\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n\n  return config;\n});\n\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;;AAEF;AACAF,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAIF,KAAK,EAAE;IACT;IACAD,MAAM,CAACI,OAAO,GAAGJ,MAAM,CAACI,OAAO,IAAI,CAAC,CAAC;IACrCJ,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC,GAAI,UAASH,KAAM,EAAC;EACrD;EAEA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeN,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}