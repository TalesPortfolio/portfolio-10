{"ast":null,"code":"var _jsxFileName = \"/home/tales/Documents/GITHUB-PORTFOLIO/portfolio-10/notas/frontend-tasks/src/containers/componets/FiltroCard/index.tsx\",\n  _s = $RefreshSig$();\n//Filto Card\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as S from './styles';\nimport { alterarFiltro } from '../../../store/reducers/filtro';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FiltroCard = _ref => {\n  _s();\n  let {\n    legenda,\n    criterio,\n    valor\n  } = _ref;\n  const dispatch = useDispatch();\n  const {\n    filtro,\n    tarefas\n  } = useSelector(state => state);\n  const verificaEstaAtivo = () => {\n    const mesmoCriterio = filtro.criterio === criterio;\n    const mesmoValor = filtro.valor === valor;\n    return mesmoCriterio && mesmoValor;\n  };\n  const contarTarefas = () => {\n    if (criterio === 'tous') return tarefas.itens.length;\n    if (criterio === 'priorité') {\n      return tarefas.itens.filter(item => item.prioridade === valor).length;\n    }\n    if (criterio === 'status') {\n      return tarefas.itens.filter(item => item.status === valor).length;\n    }\n  };\n  const filtrar = () => {\n    dispatch(alterarFiltro({\n      criterio,\n      valor\n    }));\n  };\n  const contador = contarTarefas();\n  const ativo = verificaEstaAtivo();\n  return /*#__PURE__*/_jsxDEV(S.Card, {\n    ativo: ativo,\n    onClick: filtrar,\n    children: [/*#__PURE__*/_jsxDEV(S.Contador, {\n      children: contador\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Label, {\n      children: legenda\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(FiltroCard, \"0Eu14rKkSP2/LzT1tyAgdIydr7g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FiltroCard;\nexport default FiltroCard;\nvar _c;\n$RefreshReg$(_c, \"FiltroCard\");","map":{"version":3,"names":["useDispatch","useSelector","S","alterarFiltro","jsxDEV","_jsxDEV","FiltroCard","_ref","_s","legenda","criterio","valor","dispatch","filtro","tarefas","state","verificaEstaAtivo","mesmoCriterio","mesmoValor","contarTarefas","itens","length","filter","item","prioridade","status","filtrar","contador","ativo","Card","onClick","children","Contador","fileName","_jsxFileName","lineNumber","columnNumber","Label","_c","$RefreshReg$"],"sources":["/home/tales/Documents/GITHUB-PORTFOLIO/portfolio-10/notas/frontend-tasks/src/containers/componets/FiltroCard/index.tsx"],"sourcesContent":["//Filto Card\nimport { useDispatch, useSelector } from 'react-redux'\nimport * as S from './styles'\nimport { alterarFiltro } from '../../../store/reducers/filtro'\nimport * as enums from '../../utils/enums/Tarefa'\nimport { RootReducer } from '../../../store'\n\nexport type Props = {\n  legenda: string\n  criterio: 'priorité' | 'status' | 'tous'\n  valor?: enums.Prioridade | enums.Status\n}\n\nconst FiltroCard = ({ legenda, criterio, valor }: Props) => {\n  const dispatch = useDispatch()\n  const { filtro, tarefas } = useSelector((state: RootReducer) => state)\n\n  const verificaEstaAtivo = () => {\n    const mesmoCriterio = filtro.criterio === criterio\n    const mesmoValor = filtro.valor === valor\n\n    return mesmoCriterio && mesmoValor\n  }\n\n  const contarTarefas = () => {\n    if (criterio === 'tous') return tarefas.itens.length\n    if (criterio === 'priorité') {\n      return tarefas.itens.filter((item) => item.prioridade === valor).length\n    }\n    if (criterio === 'status') {\n      return tarefas.itens.filter((item) => item.status === valor).length\n    }\n  }\n\n  const filtrar = () => {\n    dispatch(\n      alterarFiltro({\n        criterio,\n        valor\n      })\n    )\n  }\n\n  const contador = contarTarefas()\n  const ativo = verificaEstaAtivo()\n\n  return (\n    <S.Card ativo={ativo} onClick={filtrar}>\n      <S.Contador>{contador}</S.Contador>\n      <S.Label>{legenda}</S.Label>\n    </S.Card>\n  )\n}\n\nexport default FiltroCard\n"],"mappings":";;AAAA;AACA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,KAAKC,CAAC,MAAM,UAAU;AAC7B,SAASC,aAAa,QAAQ,gCAAgC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAU9D,MAAMC,UAAU,GAAGC,IAAA,IAAyC;EAAAC,EAAA;EAAA,IAAxC;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAa,CAAC,GAAAJ,IAAA;EACrD,MAAMK,QAAQ,GAAGZ,WAAW,EAAE;EAC9B,MAAM;IAAEa,MAAM;IAAEC;EAAQ,CAAC,GAAGb,WAAW,CAAEc,KAAkB,IAAKA,KAAK,CAAC;EAEtE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,aAAa,GAAGJ,MAAM,CAACH,QAAQ,KAAKA,QAAQ;IAClD,MAAMQ,UAAU,GAAGL,MAAM,CAACF,KAAK,KAAKA,KAAK;IAEzC,OAAOM,aAAa,IAAIC,UAAU;EACpC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIT,QAAQ,KAAK,MAAM,EAAE,OAAOI,OAAO,CAACM,KAAK,CAACC,MAAM;IACpD,IAAIX,QAAQ,KAAK,UAAU,EAAE;MAC3B,OAAOI,OAAO,CAACM,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,UAAU,KAAKb,KAAK,CAAC,CAACU,MAAM;IACzE;IACA,IAAIX,QAAQ,KAAK,QAAQ,EAAE;MACzB,OAAOI,OAAO,CAACM,KAAK,CAACE,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACE,MAAM,KAAKd,KAAK,CAAC,CAACU,MAAM;IACrE;EACF,CAAC;EAED,MAAMK,OAAO,GAAGA,CAAA,KAAM;IACpBd,QAAQ,CACNT,aAAa,CAAC;MACZO,QAAQ;MACRC;IACF,CAAC,CAAC,CACH;EACH,CAAC;EAED,MAAMgB,QAAQ,GAAGR,aAAa,EAAE;EAChC,MAAMS,KAAK,GAAGZ,iBAAiB,EAAE;EAEjC,oBACEX,OAAA,CAACH,CAAC,CAAC2B,IAAI;IAACD,KAAK,EAAEA,KAAM;IAACE,OAAO,EAAEJ,OAAQ;IAAAK,QAAA,gBACrC1B,OAAA,CAACH,CAAC,CAAC8B,QAAQ;MAAAD,QAAA,EAAEJ;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAc,eACnC/B,OAAA,CAACH,CAAC,CAACmC,KAAK;MAAAN,QAAA,EAAEtB;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAW;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrB;AAEb,CAAC;AAAA5B,EAAA,CAvCKF,UAAU;EAAA,QACGN,WAAW,EACAC,WAAW;AAAA;AAAAqC,EAAA,GAFnChC,UAAU;AAyChB,eAAeA,UAAU;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}